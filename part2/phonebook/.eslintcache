[{"/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/index.js":"1","/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/App.js":"2","/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/components/PersonForm.js":"3","/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/components/Persons.js":"4","/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/components/Filter.js":"5","/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/services/phonebook.js":"6","/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/components/SuccessNotification.js":"7","/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/components/ErrorNotification.js":"8"},{"size":219,"mtime":1613379139338,"results":"9","hashOfConfig":"10"},{"size":4094,"mtime":1613987269237,"results":"11","hashOfConfig":"10"},{"size":543,"mtime":1610341005810,"results":"12","hashOfConfig":"10"},{"size":266,"mtime":1613622769513,"results":"13","hashOfConfig":"10"},{"size":199,"mtime":1610341261948,"results":"14","hashOfConfig":"10"},{"size":660,"mtime":1613987159651,"results":"15","hashOfConfig":"10"},{"size":214,"mtime":1613986685491,"results":"16","hashOfConfig":"10"},{"size":239,"mtime":1613986696183,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t84k28",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/index.js",[],"/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/App.js",["36"],"import \"./index.css\";\nimport React, { useEffect, useState } from \"react\";\n\nimport PersonForm from \"../src/components/PersonForm\";\n\nimport Filter from \"./components/Filter\";\nimport Persons from \"./components/Persons\";\nimport SuccessNotification from \"./components/SuccessNotification\";\nimport PhonebookServices from \"./services/phonebook\";\nimport ErrorNotification from \"./components/ErrorNotification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  useEffect(() => {\n    PhonebookServices.getAll().then(response => {\n      setPersons(response);\n    });\n  }, []);\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = event => {\n    setNewPhone(event.target.value);\n  };\n\n  const handleNameFilter = event => {\n    setNameFilter(event.target.value);\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    let hasName = persons.some(\n      person => person[\"name\"].toLowerCase() === newName.toLowerCase()\n    );\n\n    if (hasName) {\n      const selectedPerson = persons.find(\n        person => person[\"name\"].toLowerCase() === newName.toLowerCase()\n      );\n      const result = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n      const changedPerson = { ...selectedPerson, number: newPhone };\n      const id = selectedPerson.id;\n      if (result) {\n        PhonebookServices.update(id, changedPerson)\n          .then(response => {\n            setPersons(\n              persons.map(person => (person.id !== id ? person : response))\n            );\n            setNewName(\"\");\n            setNewPhone(\"\");\n            setSuccessMessage(`Updated ${response.name}`);\n            setTimeout(() => {\n              setSuccessMessage(null);\n            }, 5000);\n          })\n          .catch(error => {\n            setErrorMessage(\n              `Information of ${selectedPerson.name} has already been removed from the server`\n            );\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n          });\n      }\n    } else {\n      const personObject = { name: newName, number: newPhone };\n\n      PhonebookServices.create(personObject).then(response => {\n        setPersons(persons.concat(response));\n        setNewName(\"\");\n        setNewPhone(\"\");\n        setSuccessMessage(`Added ${response.name}`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  const deletePerson = id => {\n    const selectedPerson = persons.find(person => person.id == id);\n    const result = window.confirm(`Delete ${selectedPerson.name}?`);\n\n    if (result) {\n      PhonebookServices.deletePerson(id)\n        .then(response => {\n          setPersons(persons.filter(n => n.id !== id));\n        })\n        .catch(error => {\n          setErrorMessage(\n            `Information of ${selectedPerson.name} has already been removed from the server`\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const personsToShow =\n    nameFilter.length > 0\n      ? persons.filter(person => person.name.includes(nameFilter))\n      : persons;\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification message={successMessage} />\n      <ErrorNotification message={errorMessage} />\n      <Filter nameFilter={nameFilter} handleNameFilter={handleNameFilter} />\n      <h2>Add a new person</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newPhone={newPhone}\n        handlePhoneChange={handlePhoneChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} handleDelete={id => deletePerson(id)} />\n    </div>\n  );\n};\n\nexport default App;\n","/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/components/PersonForm.js",[],"/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/components/Persons.js",[],"/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/components/Filter.js",[],"/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/services/phonebook.js",["37"],"import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n  }\n\nexport default { getAll, create, update, deletePerson }","/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/components/SuccessNotification.js",[],"/Users/ilifilza/dev/misc/fullstackopen/part2/phonebook/src/components/ErrorNotification.js",[],{"ruleId":"38","severity":1,"message":"39","line":91,"column":61,"nodeType":"40","messageId":"41","endLine":91,"endColumn":63},{"ruleId":"42","severity":1,"message":"43","line":24,"column":1,"nodeType":"44","endLine":24,"endColumn":56},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]